stages:
  - build
  - validate
#  - plan
#  - deploy

decrypt:
  stage: build
  image:
    name: ubuntu:18.04
  before_script:
    - apt update && apt install gnupg
  script:
    - mkdir decrypt
    - gpg --batch --yes --passphrase="$PASS_PHRASE"
      --output decrypt/github_credential.json 
      --decrypt google/github_credential.json.gpg
  cache:
    paths:
      - decrypt

validate:
  stage: validate
  image:
    name: hashicorp/terraform:0.12.29
    entrypoint:
      - '/usr/bin/env'
      - 'PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'
  before_script:
    - alias convert_report="jq -r '([.resource_changes[]?.change.actions?]|flatten)|{\"create\":(map(select(.==\"create\"))|length),\"update\":(map(select(.==\"update\"))|length),\"delete\":(map(select(.==\"delete\"))|length)}'"
    - terraform --version
    - cd google
    - |
      cat <<EOF >terraform.tfvars
      project_id           = "$PROJECT_ID"
      bastion_members      = $BASTION_MEMBERS
      ip_source_ranges_ssh = $IP_SOURCE_RANGES_SSH
      cluster_name         = "$CLUSTER_NAME"
      cred_file            = "github_credential.json"
      EOF
    - terraform init
  cache:
    paths:
      - decrypt 
      - .terraform
  script:
    - cp decrypt/github_credential.json ./google/github_credential.json
    - terraform validate

#plan:
#  stage: plan
#  cache:
#    paths:
#      - decrypt 
#  script:
#    - cp decrypt/github_credential.json ./google/github_credential.json
#    - terraform plan -out=$PLAN
#    - "terraform show --json $PLAN | convert_report > $JSON_PLAN_FILE"
#  # Default output file for Terraform plan
#  variables:
#    PLAN: plan.tfplan
#    JSON_PLAN_FILE: tfplan.json
#  artifacts:
#    paths:
#      - $PLAN
#    reports:
#      terraform: $JSON_PLAN_FILE
#
#production:
#  stage: deploy
#  cache:
#    paths:
#      - decrypt 
#  script:
#    - cp decrypt/github_credential.json ./google/github_credential.json
#    - terraform apply $PLAN
#  variables:
#    PLAN: plan.tfplan
#    JSON_PLAN_FILE: tfplan.json  
#  when: manual
#  only:
#    - master